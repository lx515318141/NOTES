一、函数
1.call / apply
fn.call(asThis, p1,p2) 是函数的正常调用方式
当你不确定参数的个数时，就使用 apply
fn.apply(asThis, params)
2.bind
call 和 apply 是直接调用函数，而 bind 则是返回一个新函数（并没有调用原来的函数），这个新函数会 call 原来的函数，call 的参数由你指定。
3.return
每个函数都有 return
如果你不写 return，就相当于写了 return undefined
4.柯里化 / 高阶函数
返回函数的函数
柯里化：将 f(x,y) 变成 f(x=1)(y) 或 f(y=1)x
  //柯里化之前
  function sum(x,y){
      return x+y
  }
  //柯里化之后
  function addOne(y){
      return sum(1, y)
  }
  //柯里化之前
  function Handlebar(template, data){
      return template.replace('{{name}}', data.name)
  }
  //柯里化之后
  function Handlebar(template){
      return function(data){
          return template.replace('{{name}}', data.name)
      }
  }
柯里化可以将真实计算拖延到最后再做
5.高阶函数：在数学和计算机科学中，高阶函数是至少满足下列一个条件的函数：
a.接受一个或多个函数作为输入，如：forEach sort map filter reduce
b.输出一个函数，如：lodash.curry
c.不过它也可以同时满足两个条件，如：Function.prototype.bind
高阶函数的作用：可以将函数任意的组合。
6.回调 call back
名词形式：被当做参数的函数就是回调（隐含条件，函数被当做参数传给另外一个函数，这个被当做参数的函数在另一个函数里面需要被调用，即需要被call，否则就不叫call back了）
动词形式：调用这个回调
注意回调跟异步没有任何关系
7.构造函数
返回对象的函数就是构造函数
一般首字母大写
